// The program input for /src/main.leo
[issue] // the caller call in issue of token
to_address: address = aleo1az8p9vlllyqwtj0c2g9svkd0e5v0p3zzdflwwrpa7kpe8xrfxgfqqpru7m;
to_amount: u64 = 10000u64;


[monopoly_buy] //the caller purchasing its building
buy : Buildings = Buildings {
owner : aleo1az8p9vlllyqwtj0c2g9svkd0e5v0p3zzdflwwrpa7kpe8xrfxgfqqpru7m,
amount : 10000u64,
buildings : 1u64, 
_nonce: 0group,
};
spend_amount: u64 = 1500u64;




[monopoly_rent] //the caller collect rent from owner => add function in the aleo_monopoly.js
rent : Buildings = Buildings {
    owner : aleo1az8p9vlllyqwtj0c2g9svkd0e5v0p3zzdflwwrpa7kpe8xrfxgfqqpru7m,
    amount : 8500u64,
    buildings : 1u64, 
    _nonce: 0group,
};
random_roll: u64 = 0u64;
rent_amount: u64 = 150u64;


[monopoly_sale] //the caller sale the building to owner for x token
sale : Buildings = Buildings {
    owner : aleo1az8p9vlllyqwtj0c2g9svkd0e5v0p3zzdflwwrpa7kpe8xrfxgfqqpru7m,
    amount : 8500u64,
    buildings : 1u64,
    _nonce : 0group,
};
to_address: address = aleo1vtuct9867t6aldkqxuec87wesrpltk0vv4qul56wpugnn5gx05rsew3z4u;
sale_amount: u64 = 10000u64;


[mystery_card] // all-in-one mystery card input #1
mc1 : Buildings = Buildings {
    owner : aleo1az8p9vlllyqwtj0c2g9svkd0e5v0p3zzdflwwrpa7kpe8xrfxgfqqpru7m,
    amount : 8500u64,
    buildings : 1u64, 
_   nonce: 0group,
};
random_choose: u64 = 0u64;
token_action: u64 = 1500u64;


//main reward for user after one user won! mint once
[mint_reward]
to_address: address = aleo1vtuct9867t6aldkqxuec87wesrpltk0vv4qul56wpugnn5gx05rsew3z4u;
amount: u128 = 15000u128;
